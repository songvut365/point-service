// Code generated by mockery v2.39.1. DO NOT EDIT.

package mocks

import (
	context "context"
	model "point-service/app/internal/model"

	mock "github.com/stretchr/testify/mock"
)

// PointService is an autogenerated mock type for the PointService type
type PointService struct {
	mock.Mock
}

// DecreasePoint provides a mock function with given fields: ctx, successOrder
func (_m *PointService) DecreasePoint(ctx context.Context, successOrder model.SuccessOrder) error {
	ret := _m.Called(ctx, successOrder)

	if len(ret) == 0 {
		panic("no return value specified for DecreasePoint")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.SuccessOrder) error); ok {
		r0 = rf(ctx, successOrder)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPointService creates a new instance of PointService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPointService(t interface {
	mock.TestingT
	Cleanup(func())
}) *PointService {
	mock := &PointService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
